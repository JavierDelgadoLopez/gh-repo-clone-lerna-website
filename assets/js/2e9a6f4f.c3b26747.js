"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[678],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return k}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=s(t),k=r,d=u["".concat(l,".").concat(k)]||u[k]||c[k]||p;return t?a.createElement(d,i(i({ref:n},m),{},{components:t})):a.createElement(d,i({ref:n},m))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var p=t.length,i=new Array(p);i[0]=u;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<p;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2354:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return l},default:function(){return k},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var a=t(7462),r=t(3366),p=(t(7294),t(3905)),i=["components"],o={},l="Using pnpm with Lerna",s={unversionedId:"recipes/using-pnpm-with-lerna",id:"recipes/using-pnpm-with-lerna",title:"Using pnpm with Lerna",description:"Lerna can be used in a pnpm workspace to get the full benefits of both pnpm and Lerna.",source:"@site/docs/recipes/using-pnpm-with-lerna.md",sourceDirName:"recipes",slug:"/recipes/using-pnpm-with-lerna",permalink:"/docs/recipes/using-pnpm-with-lerna",draft:!1,editUrl:"https://github.com/lerna/lerna/tree/main/website/docs/recipes/using-pnpm-with-lerna.md",tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"Distributed Task Execution Guide",permalink:"/docs/concepts/dte-guide"},next:{title:"Commands",permalink:"/docs/api-reference/commands"}},m={},c=[{value:"Getting Started",id:"getting-started",level:2}],u={toc:c};function k(e){var n=e.components,t=(0,r.Z)(e,i);return(0,p.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"using-pnpm-with-lerna"},"Using pnpm with Lerna"),(0,p.kt)("p",null,"Lerna can be used in a ",(0,p.kt)("a",{parentName:"p",href:"https://pnpm.io/workspaces"},(0,p.kt)("inlineCode",{parentName:"a"},"pnpm")," workspace")," to get the full benefits of both ",(0,p.kt)("a",{parentName:"p",href:"https://pnpm.io"},(0,p.kt)("inlineCode",{parentName:"a"},"pnpm"))," and Lerna."),(0,p.kt)("p",null,"When used in a ",(0,p.kt)("inlineCode",{parentName:"p"},"pnpm")," workspace, Lerna will:"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"resolve package locations with ",(0,p.kt)("inlineCode",{parentName:"li"},"pnpm-workspace.yaml")," (",(0,p.kt)("a",{parentName:"li",href:"https://pnpm.io/workspaces"},"https://pnpm.io/workspaces"),")"),(0,p.kt)("li",{parentName:"ul"},"enforce ",(0,p.kt)("inlineCode",{parentName:"li"},"useWorkspaces: true")," in ",(0,p.kt)("inlineCode",{parentName:"li"},"lerna.json")," (and ignore ",(0,p.kt)("inlineCode",{parentName:"li"},"packages:")," in ",(0,p.kt)("inlineCode",{parentName:"li"},"package.json"),")."),(0,p.kt)("li",{parentName:"ul"},"block usage of ",(0,p.kt)("inlineCode",{parentName:"li"},"bootstrap"),", ",(0,p.kt)("inlineCode",{parentName:"li"},"link"),", and ",(0,p.kt)("inlineCode",{parentName:"li"},"add")," commands. Instead, you should use ",(0,p.kt)("inlineCode",{parentName:"li"},"pnpm")," commands directly to manage dependencies (",(0,p.kt)("a",{parentName:"li",href:"https://pnpm.io/cli/install"},"https://pnpm.io/cli/install"),")."),(0,p.kt)("li",{parentName:"ul"},"respect the ",(0,p.kt)("a",{parentName:"li",href:"https://pnpm.io/workspaces#workspace-protocol-workspace"},"workspace protocol")," for package dependencies.",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"During ",(0,p.kt)("inlineCode",{parentName:"li"},"lerna version"),", dependencies will be updated as normal, but will preserve the ",(0,p.kt)("inlineCode",{parentName:"li"},"workspace:")," prefix if it exists."),(0,p.kt)("li",{parentName:"ul"},"If a ",(0,p.kt)("a",{parentName:"li",href:"https://pnpm.io/workspaces#referencing-workspace-packages-through-aliases"},"workspace alias")," is used, then ",(0,p.kt)("inlineCode",{parentName:"li"},"lerna version")," will not bump the version of the dependency, since aliases don't specify a version number to bump.")))),(0,p.kt)("h2",{id:"getting-started"},"Getting Started"),(0,p.kt)("p",null,"To set up pnpm with Lerna:"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("p",{parentName:"li"},"If not installed already, install ",(0,p.kt)("inlineCode",{parentName:"p"},"pnpm"),": ",(0,p.kt)("a",{parentName:"p",href:"https://pnpm.io/installation"},"https://pnpm.io/installation"),".")),(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("p",{parentName:"li"},"Remove the ",(0,p.kt)("inlineCode",{parentName:"p"},"node_modules/")," folder in the root, if it exists. If not already using workspaces, run ",(0,p.kt)("inlineCode",{parentName:"p"},"lerna clean")," to remove the ",(0,p.kt)("inlineCode",{parentName:"p"},"node_modules/")," folder in all packages.")),(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("p",{parentName:"li"},"Set ",(0,p.kt)("inlineCode",{parentName:"p"},'"npmClient": "pnpm"')," and ",(0,p.kt)("inlineCode",{parentName:"p"},'"useWorkspaces": true')," in ",(0,p.kt)("inlineCode",{parentName:"p"},"lerna.json"),".")),(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("p",{parentName:"li"},"Create a ",(0,p.kt)("inlineCode",{parentName:"p"},"pnpm-workspace.yaml"),' file in the root of your project.\nIf you are already using npm or yarn workspaces, move the "workspaces" property from ',(0,p.kt)("inlineCode",{parentName:"p"},"package.json")," to ",(0,p.kt)("inlineCode",{parentName:"p"},"pnpm-workspace.yaml"),'. If you were not already using workspaces, move the "packages" property from ',(0,p.kt)("inlineCode",{parentName:"p"},"lerna.json")," to ",(0,p.kt)("inlineCode",{parentName:"p"},"pnpm-workspace.yaml"),". For example:"),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "workspaces": ["packages/*"]\n}\n')),(0,p.kt)("p",{parentName:"li"},"and"),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="lerna.json"',title:'"lerna.json"'},'{\n  "packages": ["packages/*"]\n}\n')),(0,p.kt)("p",{parentName:"li"},"become:"),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="pnpm-workspace.yaml"',title:'"pnpm-workspace.yaml"'},'packages:\n  - "packages/*"\n'))),(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("p",{parentName:"li"},"(optional) Run ",(0,p.kt)("inlineCode",{parentName:"p"},"pnpm import")," to generate a ",(0,p.kt)("inlineCode",{parentName:"p"},"pnpm-lock.yaml")," file from an existing lockfile. See ",(0,p.kt)("a",{parentName:"p",href:"https://pnpm.io/cli/import"},"https://pnpm.io/cli/import")," for supported lockfile sources.")),(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("p",{parentName:"li"},"Run ",(0,p.kt)("inlineCode",{parentName:"p"},"pnpm install"),"."))))}k.isMDXComponent=!0}}]);