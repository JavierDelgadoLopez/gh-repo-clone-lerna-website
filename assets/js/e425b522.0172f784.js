"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[964],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=i,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,o(o({ref:t},l),{},{components:n})):r.createElement(m,o({ref:t},l))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1297:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],s={id:"distributed-task-execution",title:"Distributed Task Execution"},c="Distributed Task Execution (DTE)",u={unversionedId:"core-concepts/distributed-task-execution",id:"core-concepts/distributed-task-execution",title:"Distributed Task Execution",description:"Lerna (via Nx) supports running commands across multiple machines. You can either set it up by hand (by using batching",source:"@site/docs/core-concepts/dte.md",sourceDirName:"core-concepts",slug:"/core-concepts/distributed-task-execution",permalink:"/docs/core-concepts/distributed-task-execution",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/core-concepts/dte.md",tags:[],version:"current",frontMatter:{id:"distributed-task-execution",title:"Distributed Task Execution"},sidebar:"main",previous:{title:"Computation Caching",permalink:"/docs/core-concepts/computation-caching"},next:{title:"Lerna hoisting",permalink:"/docs/guides/hoisting"}},l={},p=[{value:"Example",id:"example",level:2}],d={toc:p};function f(e){var t=e.components,s=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"distributed-task-execution-dte"},"Distributed Task Execution (DTE)"),(0,a.kt)("p",null,"Lerna (via Nx) supports running commands across multiple machines. You can either set it up by hand (by using batching\nor\nbinning) or use Nx Cloud."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://blog.nrwl.io/distributing-ci-binning-and-distributed-task-execution-632fe31a8953?source=friends_link&sk=5120b7ff982730854ed22becfe7a640a"},"Read the comparison of the two approaches.")),(0,a.kt)("p",null,"When using the distributed task execution, Lerna (via Nx) is able to run any task graph on many agents instead of\nlocally."),(0,a.kt)("p",null,"For instance, ",(0,a.kt)("inlineCode",{parentName:"p"},"> npx lerna run build")," won't run the builds locally (which can take hours for large workspaces). Instead,\nit will send the Task Graph to Nx Cloud. Nx Cloud Agents will then pick up the tasks they can run and execute them."),(0,a.kt)("p",null,"Note that this happens transparently. If an agent builds ",(0,a.kt)("inlineCode",{parentName:"p"},"remixapp"),", it will fetch the outputs for ",(0,a.kt)("inlineCode",{parentName:"p"},"header")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"footer"),"\nif it doesn't have them already."),(0,a.kt)("p",null,"As agents complete tasks, the main job where you invoked ",(0,a.kt)("inlineCode",{parentName:"p"},"> npx lerna run build")," will start receiving created files and\nterminal outputs."),(0,a.kt)("p",null,"After ",(0,a.kt)("inlineCode",{parentName:"p"},"> npx lerna run build")," completes, the machine will have the build files and all the terminal outputs as if it ran\nit locally."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"DTE",src:n(8374).Z,width:"675",height:"448"})),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/vsavkin/lerna-dte"},"This is an example repo")," showing how easy it is to set up distributed task\nexecution, showing the performance gains, and comparing to sharding/binning."))}f.isMDXComponent=!0},8374:function(e,t,n){t.Z=n.p+"assets/images/dte-f44b1c246b014eaf6a27f709f74bbf83.png"}}]);